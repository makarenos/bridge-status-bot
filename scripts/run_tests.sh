#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ Running tests...${NC}"

# –û–ø—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞
COVERAGE=${COVERAGE:-true}
VERBOSE=${VERBOSE:-true}

# –°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É pytest
PYTEST_CMD="pytest"

if [ "$VERBOSE" = true ]; then
    PYTEST_CMD="$PYTEST_CMD -v"
fi

if [ "$COVERAGE" = true ]; then
    PYTEST_CMD="$PYTEST_CMD --cov=app --cov-report=html --cov-report=term-missing"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
$PYTEST_CMD tests/

# –ï—Å–ª–∏ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º coverage
if [ $? -eq 0 ] && [ "$COVERAGE" = true ]; then
    echo -e "\n${GREEN}‚úÖ Tests passed!${NC}"
    echo -e "${BLUE}üìä Coverage report: htmlcov/index.html${NC}"
else
    echo -e "\n‚ùå Tests failed!"
    exit 1
fi